#!/bin/bash -e

# This script will save the current kernel config and system details to a git repo
#
# It checks
# (1) for `.config' in the current working directory
# (2) arg "${1}" named `*/linux-*.config'
# (3) arg "${1}" named `/boot/config-*-*'
# (4) otherwise, just save `/boot/config-$(uname -r)'

localversion() {
    awk -F= '/^CONFIG_LOCALVERSION/{gsub("\"","");print$2}' "${1}"
}

if [ -d "${1}" ]
then
    wd="$(realpath "${1}")"
else
    wd="${PWD}"
fi

if [ -f "${wd}/.config" ]
then
    current="${wd}/.config"
    version="$(find "${wd}" -name kernel.release -exec cat {} \;)"
    echo "Using ${wd}/.config ..." >&2
elif [ -f "${1}" ] && [[ "${1}" = *"/linux-"*".config" ]]
then
    current="$(realpath ${1})"
    version="${1%.config}"
    version="${version#*linux-}"
    localname="$(localversion "${current}")"
    version="${version}${localname}"
    echo "Using ${current} (version=${version}, localname=${localname}) ..." >&2
elif [ -f "${1}" ] && [[ "${1}" = "/boot/config-"*"-"* ]]
then
    current="$(realpath ${1})"
    version="${1#*/config-}"
    echo "Using ${current} ..." >&2
else
    current="/boot/config-$(uname -r)"
    version="$(uname -r)"
    echo "Using ${current} ..." >&2
fi

dir="$(dirname "$0")"
hostname=$(hostname)
arch="$(uname -m)"
localname="${version#*-}"
kernelversion="${version%%-*}"
configname="${hostname}-${localname}"
filename="${configname}.config"
details="${configname}.txt"

detailsfile() {
    echo "timestamp             $(date +"%Y-%m-%d %H:%M:%S")"
    echo "version               ${version}"
    echo "arch                  ${arch}"
    echo "hostname              $(hostname)"
    for f in /sys/devices/virtual/dmi/id/{sys_vendor,product_{family,version,name},bios_version}
    do
        printf "%-20s  %s\n" "$(basename "${f}")" "$(cat ${f})"
    done
}

read -p "Updating config '${filename}' from '${current}'. OK? (Y/n) " yn
if [ "${yn}" = "n" ]
then
    echo "User declined. Exiting." >&2
    exit 1
fi

cp -av "${current}" "${filename}"
detailsfile > "${details}"
git reset
git add "${filename}" "${details}"
git commit -o "${filename}" "${details}" -m "Updated ${configname} to version ${version}"
git status
if ! git tag | grep -qF "${version}"
then
    echo "Tag ${version} already exists." >&2
fi
read -p 'OK? (Y/n) ' yn
if [ "${yn}" = "n" ]
then
    echo "User declined. Exiting." >&2
    exit 1
fi
git tag "${kernelversion}-${configname}"
echo "${kernelversion}-${configname} tagged" >&2
